scalar Upload

type Person {
    name: String,
    email: EmailAddress,
    phone: PhoneNumber
}


input PersonInput {
    name: String,
    email: EmailAddress,
    phone: PhoneNumber
}

type Rate {
    rate: Int,
    otRate: Int,
}

input RateInput {
    rate: Int,
    otRate: Int,
}

type Bank {
    accountName: String,
    accountNumber: String,
    routingNumber: String,
    addressLine1: String,
    addressLine2: String,
    addressLine3: String,
    bankName: String
}

input BankInput {
    accountName: String,
    accountNumber: String,
    routingNumber: String,
    addressLine1: String,
    addressLine2: String,
    addressLine3: String,
    bankName: String
}

type Documents {
    id: ObjectID,
    name: String,
    description: String,
    link: String
    ownerId: ObjectID
}

input DocumentInput {
    name: String,
    description: String,
    file: Upload
}

type PaginatedDocuments {
    results: [Documents!]
    total: Int
}

extend type Query {
    documents(ownerId: String!, pageNum: Int, pageSize: Int): PaginatedDocuments
}

extend type Mutation {
    addDocument(data: DocumentInput!, ownerId: String): ObjectID
    updateDocument(data: DocumentInput!, id: String): String
    deleteDocument(id: String): String
}