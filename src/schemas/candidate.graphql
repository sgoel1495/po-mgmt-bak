type Candidate {
    id: ObjectID,
    name: String,
    personalEmail: EmailAddress,
    contact: PhoneNumber,
    timezone: String,
    addressLine1: String,
    addressLine2: String,
    addressLine3: String,
}

input CandidateInput {
    name: String,
    personalEmail: EmailAddress,
    contact: PhoneNumber,
    timezone: String,
    addressLine1: String,
    addressLine2: String,
    addressLine3: String,
}

type PaginatedCandidate {
    results: [Candidate!]
    total: Int
}
extend type Query {
    candidates(pageNum: Int, pageSize: Int): PaginatedCandidate!
    candidate(id: ObjectID): Candidate
    searchCandidate(name: String): [Candidate]
}

extend type Mutation {
    addCandidate(data: CandidateInput): ObjectID
    updateCandidate(data: CandidateInput, id: String): String
}