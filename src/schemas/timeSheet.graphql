type DayTime {
    date: Date,
    standardHours: Int,
    OTHours: Int
}

input DayTimeInput {
    date: Date,
    standardHours: Int,
    OTHours: Int
}

enum TimeSheetStatus {
    SUBMITTED
    APPROVED
}

type TimeSheet {
    id: ID,
    joining: Joining,
    month: String,
    timeSheet: [DayTime!],
    submissionDate: Date,
    approvalDate: Date,
    status: TimeSheetStatus
}

input TimeSheetInput {
    id: ID,
    joining: ObjectID,
    month: String,
    timeSheet: [DayTimeInput!],
    submissionDate: Date,
    approvalDate: Date,
    status: TimeSheetStatus
}

extend type Query {
    getTimeSheet(month:String, joining: ID): TimeSheet
}

extend type Mutation {
    updateTimeSheet(data:TimeSheetInput): String
    generateTimesheet(id: ID): String
    generateInvoice(id: ID): String
}
